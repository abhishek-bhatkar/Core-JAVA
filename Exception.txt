1)Create abstract base class "Game" with 'play()' as abstract method.
From that derive following classes.
Football,Cricket,Tennis
Create a class called as "GamesDemo" (public class)
inside a main method create an array of "Game" (3 elements)
Store objects of Football,Cricket and Tennis respectively.
Now traverse the array and call that Cricket's play() method.

abstract class Game
{
	abstract void play();
}
class Cricket extends Game
{
	public void play()
	{
		System.out.println("Playing cricket");
	}
}
class Football extends Game
{
	public void play()
	{
		System.out.println("Playing football");
	}
}
class Tennis extends Game
{
	public void play()
	{
		System.out.println("Playing tennis");
	}
}


public class GameDemo
{
	public static void main(String args[])
	{
		Game arr[]=new Game[3];
		arr[0]=new Cricket();
		arr[1]=new Football();
		arr[2]=new Tennis();
		for(int i=0;i<3;i++)
		{
		arr[i].play();
		}
	}
}

2) define your exception class by name "MyArithException"
(MyArithException.java)
define class "Calculator"   (Calculator.java)
In this class define a function,which will accept an int and return double of it.
e.g int caldouble(int)
This function will check an int which is passed to it
It will throw exception if 0 is passed or negative passed
in case of 0 caller of this method should get error message
"Zero not allowed" 
in case of negative caller of this method should get error message
"negative not allowed"
In case of positive value it should simply return the double value.

Now define class "MyCalcApp" (MyCalcApp.java)
In this class you accept a number from user and pass that no. to
caldouble() method which is mentioned above.

import java.util.*;

class MyArithException extends Exception
{
	public MyArithException(String mess)
	{
		super(mess);
	}
}


class Calculator
{
	public int caldouble(int n)throws MyArithException
	{	
		if(n==0)
		{
		throw new MyArithException("Zero is not allowed");
		}
		else if(n<0)
		{
		throw new MyArithException("Negative number not allowed.");
		}
		else
		{
		return n1*2;
		}		
	}
}

public class Exp2
{
	public static void main(String args[])
	{	
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the no");
		int a=sc.nextInt();
		Calculator c=new Calculator();
		try
		{
		double b=c.caldouble(a);
		System.out.println(b);
		}
		catch(MyArithException m)
		{
		System.out.println(m);
		}
	}
}



3)create a package called "course"
In this package create three classes
a) Dac    with methods  term1()  and term2()
b) PreDac with  method  cet()
c) Basic   with method  finalTest()
Now write application called  "VitaApp" in which call all the methods  of the above mentioned classes.

package course;

class Dac
{
	void term1()
	{
	System.out.println("In term1");
	}
	void term2()
	{
	System.out.println("In term2");
	}
}
class PreDac
{
	void cet()
	{
	System.out.println("In PreDac");
	}
}

class Basic
{
	void finalTest()
	{
	System.out.println("In Basic");
	}
}

public class VitaApp
{
	public static void main(String args[])
	{
		Dac d=new Dac();
		d.term1();
		d.term2();
		PreDac p=new PreDac();
		p.cet();
		Basic b=new Basic();
		b.finalTest();
	}
}


4)define a class called as "Item" (Item.java)
with members
String itemid;
String name;
int cost;

parameterized constructor which will accept above details at the time
of creating object.
	member function
void display()
which will display all the details of product
create instances of this class and call the method display.

class Item
{
	String itemid;
	String name;
	int cost;
	
	Item(String itemid,String name,int cost)
	{
		this.itemid=itemid;
		this.name=name;
		this.cost=cost;
	}
	
	public void display()
	{
		System.out.println("itemid = "+itemid+"\n"+"name = "+name+"\n"+"cost = "+cost+"\n");
	}
}
public class Demo
{
	public static void main(String args[])
	{
	Item i=new Item("1","Ab",500);
	Item i1=new Item("2","bc",600);
	i.display();
	i1.display();
	}
}
